{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\XORO\\\\frontend_task_manager\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Routes, Link, useNavigate } from \"react-router-dom\";\nimport TaskList from \"./TaskList\";\nimport TaskForm from \"./TaskForm\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [editingTask, setEditingTask] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [tasksChanged, setTasksChanged] = useState(false);\n  const navigate = useNavigate(); // Use useNavigate to programmatically navigate\n\n  const refreshTasks = () => {\n    setEditingTask(null);\n  };\n  const handleEdit = task => {\n    setEditingTask(task);\n    navigate(\"/\"); // Navigate to the form after selecting a task for editing\n  };\n  const handleDelete = id => {\n    axios.delete(`http://localhost:3000/tasks/${id}`).then(() => {\n      setTasksChanged(true);\n      setSuccessMessage(\"Task deleted successfully!\");\n      setTimeout(() => setSuccessMessage(\"\"), 3000);\n    }).catch(error => console.error(\"Error deleting task:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-center mb-8\",\n      children: \"Task Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-2 bg-green-100 text-green-700 rounded text-center\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-8\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/tasks\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\",\n          children: \"Show Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(TaskForm, {\n          currentTask: editingTask,\n          onTaskSubmit: () => {\n            refreshTasks();\n            setSuccessMessage(editingTask ? \"Task updated successfully!\" : \"Task added successfully!\");\n            setTimeout(() => setSuccessMessage(\"\"), 3000);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/tasks\",\n        element: /*#__PURE__*/_jsxDEV(TaskList, {\n          onEdit: handleEdit,\n          onDelete: handleDelete,\n          tasksChanged: tasksChanged,\n          onTasksChanged: () => setTasksChanged(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"nHOJiuDxrhug02ihlobX9iKOhK0=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","Link","useNavigate","TaskList","TaskForm","axios","jsxDEV","_jsxDEV","App","_s","editingTask","setEditingTask","successMessage","setSuccessMessage","tasksChanged","setTasksChanged","navigate","refreshTasks","handleEdit","task","handleDelete","id","delete","then","setTimeout","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","path","element","currentTask","onTaskSubmit","onEdit","onDelete","onTasksChanged","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/XORO/frontend_task_manager/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Routes, Link, useNavigate } from \"react-router-dom\";\nimport TaskList from \"./TaskList\";\nimport TaskForm from \"./TaskForm\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [editingTask, setEditingTask] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [tasksChanged, setTasksChanged] = useState(false);\n  const navigate = useNavigate(); // Use useNavigate to programmatically navigate\n\n  const refreshTasks = () => {\n    setEditingTask(null);\n  };\n\n  const handleEdit = (task) => {\n    setEditingTask(task);\n    navigate(\"/\"); // Navigate to the form after selecting a task for editing\n  };\n\n  const handleDelete = (id) => {\n    axios\n      .delete(`http://localhost:3000/tasks/${id}`)\n      .then(() => {\n        setTasksChanged(true);\n        setSuccessMessage(\"Task deleted successfully!\");\n        setTimeout(() => setSuccessMessage(\"\"), 3000);\n      })\n      .catch((error) => console.error(\"Error deleting task:\", error));\n  };\n\n  return (\n    <div className=\"container mx-auto p-6\">\n      <h1 className=\"text-3xl font-bold text-center mb-8\">Task Management</h1>\n\n      {successMessage && (\n        <div className=\"mb-4 p-2 bg-green-100 text-green-700 rounded text-center\">\n          {successMessage}\n        </div>\n      )}\n\n      <div className=\"text-center mb-8\">\n        <Link to=\"/tasks\">\n          <button className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\">\n            Show Tasks\n          </button>\n        </Link>\n      </div>\n\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <TaskForm\n              currentTask={editingTask}\n              onTaskSubmit={() => {\n                refreshTasks();\n                setSuccessMessage(editingTask ? \"Task updated successfully!\" : \"Task added successfully!\");\n                setTimeout(() => setSuccessMessage(\"\"), 3000);\n              }}\n            />\n          }\n        />\n        <Route\n          path=\"/tasks\"\n          element={\n            <TaskList\n              onEdit={handleEdit}\n              onDelete={handleDelete}\n              tasksChanged={tasksChanged}\n              onTasksChanged={() => setTasksChanged(false)}\n            />\n          }\n        />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}