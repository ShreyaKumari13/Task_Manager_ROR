{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\XORO\\\\frontend_task_manager\\\\src\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  onEdit,\n  onDelete,\n  tasksChanged,\n  onTasksChanged\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch tasks from the backend\n  const fetchTasks = () => {\n    axios.get(\"http://localhost:3000/tasks\").then(response => {\n      setTasks(response.data);\n      onTasksChanged(); // Reset the tasksChanged state after tasks are fetched\n    }).catch(error => console.error(\"Error fetching tasks:\", error));\n  };\n\n  // Re-fetch tasks when the component mounts or when tasksChanged becomes true\n  useEffect(() => {\n    fetchTasks();\n  }, [tasksChanged]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 bg-gray-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Task List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-4\",\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"p-4 bg-white rounded shadow-md flex justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-semibold\",\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"mr-2 px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600\",\n              onClick: () => onEdit(task),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600\",\n              onClick: () => onDelete(task.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","TaskList","onEdit","onDelete","tasksChanged","onTasksChanged","_s","tasks","setTasks","fetchTasks","get","then","response","data","catch","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","task","title","description","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/XORO/frontend_task_manager/src/TaskList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst TaskList = ({ onEdit, onDelete, tasksChanged, onTasksChanged }) => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  // Fetch tasks from the backend\r\n  const fetchTasks = () => {\r\n    axios\r\n      .get(\"http://localhost:3000/tasks\")\r\n      .then((response) => {\r\n        setTasks(response.data);\r\n        onTasksChanged(); // Reset the tasksChanged state after tasks are fetched\r\n      })\r\n      .catch((error) => console.error(\"Error fetching tasks:\", error));\r\n  };\r\n\r\n  // Re-fetch tasks when the component mounts or when tasksChanged becomes true\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, [tasksChanged]);\r\n\r\n  return (\r\n    <div>\r\n    <div className=\"p-6 bg-gray-100\">\r\n      <h2 className=\"text-xl font-bold mb-4\">Task List</h2>\r\n      <ul className=\"space-y-4\">\r\n        {tasks.map((task) => (\r\n          <li key={task.id} className=\"p-4 bg-white rounded shadow-md flex justify-between\">\r\n            <div>\r\n              <h3 className=\"font-semibold\">{task.title}</h3>\r\n              <p>{task.description}</p>\r\n            </div>\r\n            <div>\r\n              <button\r\n                className=\"mr-2 px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n                onClick={() => onEdit(task)}\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                className=\"px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600\"\r\n                onClick={() => onDelete(task.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}