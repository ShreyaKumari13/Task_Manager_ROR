{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\XORO\\\\frontend_task_manager\\\\src\\\\TaskList.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\n\n// const TaskList = ({ onEdit, onDelete, tasksChanged, onTasksChanged }) => {\n//   const [tasks, setTasks] = useState([]);\n\n//   // Fetch tasks from the backend\n//   const fetchTasks = () => {\n//     axios\n//       .get(\"http://localhost:3000/tasks\")\n//       .then((response) => {\n//         setTasks(response.data);\n//         onTasksChanged(); // Reset the tasksChanged state after tasks are fetched\n//       })\n//       .catch((error) => console.error(\"Error fetching tasks:\", error));\n//   };\n\n//   // Re-fetch tasks when the component mounts or when tasksChanged becomes true\n//   useEffect(() => {\n//     fetchTasks();\n//   }, [tasksChanged]);\n\n//   return (\n//     <div>\n//       <div className=\"text-center mb-8\">\n//         <Link to=\"/\">\n//           <button className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\">\n//             Add Tasks\n//           </button>\n//         </Link>\n//       </div>\n//       <div className=\"p-6 bg-gray-100\">\n//         <h2 className=\"text-xl font-bold mb-4\">Task List</h2>\n//         <ul className=\"space-y-4\">\n//           {tasks.map((task) => (\n//             <li\n//               key={task.id}\n//               className=\"p-4 bg-white rounded shadow-md flex justify-between\"\n//             >\n//               <div>\n//                 <h3 className=\"font-semibold\">{task.title}</h3>\n//                 <p>{task.description}</p>\n//               </div>\n//               <div>\n//                 <button\n//                   className=\"mr-2 px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600\"\n//                   onClick={() => onEdit(task)}\n//                 >\n//                   Edit\n//                 </button>\n//                 <button\n//                   className=\"px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600\"\n//                   onClick={() => onDelete(task.id)}\n//                 >\n//                   Delete\n//                 </button>\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default TaskList;\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  onEdit,\n  onDelete,\n  tasksChanged,\n  onTasksChanged\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const navigate = useNavigate(); // Hook for navigation\n\n  // Fetch tasks from the backend\n  const fetchTasks = () => {\n    axios.get(\"http://localhost:3000/tasks\").then(response => {\n      setTasks(response.data);\n      onTasksChanged(); // Reset the tasksChanged state after tasks are fetched\n    }).catch(error => console.error(\"Error fetching tasks:\", error));\n  };\n\n  // Re-fetch tasks when the component mounts or when tasksChanged becomes true\n  useEffect(() => {\n    fetchTasks();\n  }, [tasksChanged]);\n  const handleEditClick = task => {\n    onEdit(task);\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-8\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\",\n          children: \"Add Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 bg-gray-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Task List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-4\",\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"p-4 bg-white rounded shadow-md flex justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-semibold\",\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"mr-2 px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600\",\n              onClick: () => handleEditClick(task) // Call handleEditClick\n              ,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600\",\n              onClick: () => onDelete(task.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"mP0t/edHjXqSrQwGHZvoFmDCs3M=\", false, function () {\n  return [useNavigate];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","useNavigate","jsxDEV","_jsxDEV","TaskList","onEdit","onDelete","tasksChanged","onTasksChanged","_s","tasks","setTasks","navigate","fetchTasks","get","then","response","data","catch","error","console","handleEditClick","task","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","map","title","description","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/XORO/frontend_task_manager/src/TaskList.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\r\n\r\n// const TaskList = ({ onEdit, onDelete, tasksChanged, onTasksChanged }) => {\r\n//   const [tasks, setTasks] = useState([]);\r\n\r\n//   // Fetch tasks from the backend\r\n//   const fetchTasks = () => {\r\n//     axios\r\n//       .get(\"http://localhost:3000/tasks\")\r\n//       .then((response) => {\r\n//         setTasks(response.data);\r\n//         onTasksChanged(); // Reset the tasksChanged state after tasks are fetched\r\n//       })\r\n//       .catch((error) => console.error(\"Error fetching tasks:\", error));\r\n//   };\r\n\r\n//   // Re-fetch tasks when the component mounts or when tasksChanged becomes true\r\n//   useEffect(() => {\r\n//     fetchTasks();\r\n//   }, [tasksChanged]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <div className=\"text-center mb-8\">\r\n//         <Link to=\"/\">\r\n//           <button className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\">\r\n//             Add Tasks\r\n//           </button>\r\n//         </Link>\r\n//       </div>\r\n//       <div className=\"p-6 bg-gray-100\">\r\n//         <h2 className=\"text-xl font-bold mb-4\">Task List</h2>\r\n//         <ul className=\"space-y-4\">\r\n//           {tasks.map((task) => (\r\n//             <li\r\n//               key={task.id}\r\n//               className=\"p-4 bg-white rounded shadow-md flex justify-between\"\r\n//             >\r\n//               <div>\r\n//                 <h3 className=\"font-semibold\">{task.title}</h3>\r\n//                 <p>{task.description}</p>\r\n//               </div>\r\n//               <div>\r\n//                 <button\r\n//                   className=\"mr-2 px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n//                   onClick={() => onEdit(task)}\r\n//                 >\r\n//                   Edit\r\n//                 </button>\r\n//                 <button\r\n//                   className=\"px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600\"\r\n//                   onClick={() => onDelete(task.id)}\r\n//                 >\r\n//                   Delete\r\n//                 </button>\r\n//               </div>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TaskList;\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nconst TaskList = ({ onEdit, onDelete, tasksChanged, onTasksChanged }) => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const navigate = useNavigate(); // Hook for navigation\r\n\r\n  // Fetch tasks from the backend\r\n  const fetchTasks = () => {\r\n    axios\r\n      .get(\"http://localhost:3000/tasks\")\r\n      .then((response) => {\r\n        setTasks(response.data);\r\n        onTasksChanged(); // Reset the tasksChanged state after tasks are fetched\r\n      })\r\n      .catch((error) => console.error(\"Error fetching tasks:\", error));\r\n  };\r\n\r\n  // Re-fetch tasks when the component mounts or when tasksChanged becomes true\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, [tasksChanged]);\r\n\r\n  const handleEditClick = (task) => {\r\n    onEdit(task);\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"text-center mb-8\">\r\n        <Link to=\"/\">\r\n          <button className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\">\r\n            Add Tasks\r\n          </button>\r\n        </Link>\r\n      </div>\r\n      <div className=\"p-6 bg-gray-100\">\r\n        <h2 className=\"text-xl font-bold mb-4\">Task List</h2>\r\n        <ul className=\"space-y-4\">\r\n          {tasks.map((task) => (\r\n            <li\r\n              key={task.id}\r\n              className=\"p-4 bg-white rounded shadow-md flex justify-between\"\r\n            >\r\n              <div>\r\n                <h3 className=\"font-semibold\">{task.title}</h3>\r\n                <p>{task.description}</p>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  className=\"mr-2 px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n                  onClick={() => handleEditClick(task)} // Call handleEditClick\r\n                >\r\n                  Edit\r\n                </button>\r\n                <button\r\n                  className=\"px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600\"\r\n                  onClick={() => onDelete(task.id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}