{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\XORO\\\\frontend_task_manager\\\\src\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  currentTask,\n  onTaskSubmit\n}) => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\"); // State for success message\n  const navigate = useNavigate(); // Hook for navigation\n\n  useEffect(() => {\n    if (currentTask) {\n      setTitle(currentTask.title);\n      setDescription(currentTask.description);\n    } else {\n      // Reset fields when no current task is being edited\n      setTitle(\"\");\n      setDescription(\"\");\n    }\n  }, [currentTask]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (currentTask) {\n      // Update existing task\n      axios.put(`http://localhost:3000/tasks/${currentTask.id}`, {\n        task: {\n          title,\n          description\n        }\n      }).then(() => {\n        onTaskSubmit();\n        setSuccessMessage(\"Task updated successfully!\"); // Set success message\n        resetForm(); // Reset form fields\n        setTimeout(() => {\n          setSuccessMessage(\"\"); // Clear the message after 3 seconds\n          navigate(\"/\"); // Redirect to the form after updating\n        }, 3000);\n      }).catch(error => console.error(\"Error updating task:\", error));\n    } else {\n      // Create new task\n      axios.post(\"http://localhost:3000/tasks\", {\n        task: {\n          title,\n          description\n        }\n      }).then(() => {\n        onTaskSubmit();\n        setSuccessMessage(\"Task added successfully!\"); // Set success message\n        resetForm(); // Reset form fields\n        setTimeout(() => {\n          setSuccessMessage(\"\"); // Clear the message after 3 seconds\n          navigate(\"/\"); // Redirect to the form after creating\n        }, 3000);\n      }).catch(error => console.error(\"Error creating task:\", error));\n    }\n  };\n\n  // Function to reset form fields\n  const resetForm = () => {\n    setTitle(\"\"); // Clear the title input\n    setDescription(\"\"); // Clear the description input\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-8\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/tasks\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\",\n          children: \"Show Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"p-6 bg-gray-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: currentTask ? \"Edit Task\" : \"Add New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 p-2 bg-green-100 text-green-700 rounded text-center\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Task Title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          className: \"w-full p-2 border border-gray-300 rounded\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Task Description\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          className: \"w-full p-2 border border-gray-300 rounded\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600\",\n        children: currentTask ? \"Update Task\" : \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"w+4vFRcIMnA03MRDWUpKuvtSLo8=\", false, function () {\n  return [useNavigate];\n});\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","BrowserRouter","Router","Route","Routes","Link","jsxDEV","_jsxDEV","TaskForm","currentTask","onTaskSubmit","_s","title","setTitle","description","setDescription","successMessage","setSuccessMessage","navigate","handleSubmit","e","preventDefault","put","id","task","then","resetForm","setTimeout","catch","error","console","post","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/XORO/frontend_task_manager/src/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { BrowserRouter as Router, Route, Routes, Link } from \"react-router-dom\";\r\n\r\nconst TaskForm = ({ currentTask, onTaskSubmit }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\"); // State for success message\r\n  const navigate = useNavigate(); // Hook for navigation\r\n\r\n  useEffect(() => {\r\n    if (currentTask) {\r\n      setTitle(currentTask.title);\r\n      setDescription(currentTask.description);\r\n    } else {\r\n      // Reset fields when no current task is being edited\r\n      setTitle(\"\");\r\n      setDescription(\"\");\r\n    }\r\n  }, [currentTask]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (currentTask) {\r\n      // Update existing task\r\n      axios\r\n        .put(`http://localhost:3000/tasks/${currentTask.id}`, { task: { title, description } })\r\n        .then(() => {\r\n          onTaskSubmit();\r\n          setSuccessMessage(\"Task updated successfully!\"); // Set success message\r\n          resetForm(); // Reset form fields\r\n          setTimeout(() => {\r\n            setSuccessMessage(\"\"); // Clear the message after 3 seconds\r\n            navigate(\"/\"); // Redirect to the form after updating\r\n          }, 3000);\r\n        })\r\n        .catch((error) => console.error(\"Error updating task:\", error));\r\n    } else {\r\n      // Create new task\r\n      axios\r\n        .post(\"http://localhost:3000/tasks\", { task: { title, description } })\r\n        .then(() => {\r\n          onTaskSubmit();\r\n          setSuccessMessage(\"Task added successfully!\"); // Set success message\r\n          resetForm(); // Reset form fields\r\n          setTimeout(() => {\r\n            setSuccessMessage(\"\"); // Clear the message after 3 seconds\r\n            navigate(\"/\"); // Redirect to the form after creating\r\n          }, 3000);\r\n        })\r\n        .catch((error) => console.error(\"Error creating task:\", error));\r\n    }\r\n  };\r\n\r\n  // Function to reset form fields\r\n  const resetForm = () => {\r\n    setTitle(\"\"); // Clear the title input\r\n    setDescription(\"\"); // Clear the description input\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <div className=\"text-center mb-8\">\r\n    <Link to=\"/tasks\">\r\n      <button className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\">\r\n        Show Tasks\r\n      </button>\r\n    </Link>\r\n  </div>\r\n    \r\n    <form onSubmit={handleSubmit} className=\"p-6 bg-gray-100\">\r\n      <h2 className=\"text-xl font-bold mb-4\">{currentTask ? \"Edit Task\" : \"Add New Task\"}</h2>\r\n\r\n      {/* Display success message */}\r\n      {successMessage && (\r\n        <div className=\"mb-4 p-2 bg-green-100 text-green-700 rounded text-center\">\r\n          {successMessage}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"mb-4\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Task Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          className=\"w-full p-2 border border-gray-300 rounded\"\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <textarea\r\n          placeholder=\"Task Description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          className=\"w-full p-2 border border-gray-300 rounded\"\r\n          required\r\n        />\r\n      </div>\r\n      <button\r\n        type=\"submit\"\r\n        className=\"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600\"\r\n      >\r\n        {currentTask ? \"Update Task\" : \"Create Task\"}\r\n      </button>\r\n    </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}